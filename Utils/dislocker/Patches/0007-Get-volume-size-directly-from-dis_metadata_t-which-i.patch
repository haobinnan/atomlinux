From 6a653083adf17f9511fc631ab28e9770c80056d3 Mon Sep 17 00:00:00 2001
From: haobinnan <haobinnan@gmail.com>
Date: Tue, 24 Sep 2019 13:15:08 +0800
Subject: [PATCH 5/6] Get volume size directly from dis_metadata_t, which is
 more accurate.

---
 src/inouts/inouts.c  | 17 -----------------
 src/inouts/prepare.c |  5 ++---
 2 files changed, 2 insertions(+), 20 deletions(-)

diff --git a/src/inouts/inouts.c b/src/inouts/inouts.c
index 44c8238..de44e7e 100644
--- a/src/inouts/inouts.c
+++ b/src/inouts/inouts.c
@@ -26,10 +26,6 @@
 #include "dislocker/dislocker.priv.h"
 #include "dislocker/config.priv.h"
 
-#include <sys/ioctl.h>
-
-#define BLKGETSIZE64 _IOR(0x12,114,size_t)	/* return device size in bytes (u64 *arg) */
-
 
 /**
  * Getting the real volume size is proving to be quite difficult.
@@ -87,24 +83,11 @@ static uint64_t get_volume_size(dis_context_t dis_ctx)
 
 		old_vbr = dis_metadata_set_volume_header(dis_ctx->metadata, input);
 		volume_size = dis_metadata_volume_size_from_vbr(dis_ctx->metadata);
-		//NTFS + 1 Sector
-		if (volume_size && memcmp(NTFS_SIGNATURE, dis_ctx->metadata->volume_header->signature, NTFS_SIGNATURE_SIZE) == 0)
-			volume_size += dis_ctx->metadata->volume_header->sector_size;
-		//NTFS + 1 Sector
 		dis_metadata_set_volume_header(dis_ctx->metadata, old_vbr);
 
 		dis_free(input);
 	}
 
-	//Windows 10 1903 exFAT
-	if (!volume_size) {
-		uint64_t blksize64 = 0;
-		if(!ioctl(dis_ctx->io_data.volume_fd, BLKGETSIZE64, &blksize64)) {
-			volume_size = blksize64;
-		}
-	}
-	//Windows 10 1903 exFAT
-
 	return volume_size;
 }
 
diff --git a/src/inouts/prepare.c b/src/inouts/prepare.c
index efb8d49..eb2b1e3 100644
--- a/src/inouts/prepare.c
+++ b/src/inouts/prepare.c
@@ -113,10 +113,9 @@ int prepare_crypt(dis_context_t dis_ctx)
 	io_data->nb_backup_sectors     = dis_metadata_backup_sectors_count(io_data->metadata);
 
 	/*
-	 * We need to grab the volume's size from the first sector, so we can
-	 * announce it on a getattr call
+	 * Get volume size directly from dis_metadata_t, which is more accurate.
 	 */
-	io_data->volume_size = dis_inouts_volume_size(dis_ctx);
+	io_data->volume_size = io_data->encrypted_volume_size;
 	if(io_data->volume_size == 0)
 	{
 		dis_printf(L_ERROR, "Can't initialize the volume's size\n");
-- 
2.25.1

